{"version":2,"kind":"Notebook","sha256":"5d435f5264ce8c5bb7f2d8a594651064abcf1d352f8c119b432c79b714ac07a1","slug":"notebooks.foundations.unstructured-grids","location":"/notebooks/01-foundations/unstructured-grids.ipynb","dependencies":[],"frontmatter":{"title":"Unstructured Grids Overview","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"The Project Pythia Community","given":"The Project Pythia","family":"Community"},"name":"The Project Pythia Community","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/unstructured-grid-viz-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/unstructured-grid-viz-cookbook/blob/main/notebooks/01-foundations/unstructured-grids.ipynb","thumbnail":"/unstructured-grid-viz-cookbook/build/e272ded17428f993075a0c5879925b99.svg","exports":[{"format":"ipynb","filename":"unstructured-grids.ipynb","url":"/unstructured-grid-viz-cookbook/build/unstructured-grids-3e1ebf331e3d19604e5ec38b01b41f68.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":474.08,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"image","url":"/unstructured-grid-viz-cookbook/build/e272ded17428f993075a0c5879925b99.svg","alt":"UXarray logo","width":"30%","key":"LvyFVGs1YX","urlSource":"https://raw.githubusercontent.com/UXARRAY/uxarray/main/docs/_static/images/logos/uxarray_logo_h_dark.svg"}],"key":"U61uPkxgaa"},{"type":"heading","depth":1,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Unstructured Grids Overview","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rPcYnLbfPv"}],"identifier":"unstructured-grids-overview","label":"Unstructured Grids Overview","html_id":"unstructured-grids-overview","implicit":true,"key":"IURfy6aQnR"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"In this section, you’ll learn:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NMZQLiMeP5"}],"identifier":"in-this-section-youll-learn","label":"In this section, you’ll learn:","html_id":"in-this-section-youll-learn","implicit":true,"key":"AQZLBTBKdG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"What unstructured meshes are and how they are different than structured grids","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"DPZsX4EpI1"}],"key":"lD23nO9Npg"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Grid terminology and conventions","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Xa5GXqFWMh"}],"key":"Go3A2Hz3y0"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Unstructured grid formats","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"y3jf2Y23qw"}],"key":"CCz3VephuW"}],"key":"G2gbpTFOv5"},{"type":"heading","depth":3,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Related Documentation","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Q5Gis6wkoh"}],"identifier":"related-documentation","label":"Related Documentation","html_id":"related-documentation","implicit":true,"key":"nnPKaBdoK6"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/user-guide/terminology.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"UXarray Terminology Documentation","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"sRgJIKGb5M"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/user-guide/terminology.html","key":"WJyJTiBDML"}],"key":"jhOfWz7RoH"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/user-guide/representation.html","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"UXarray Conventions Documentation","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"KkKNBm9zOf"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/user-guide/representation.html","key":"B5LfwYaX0h"}],"key":"PvqqirVKJL"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/user-guide/grid-formats.html","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"UXarray Supported Models and Grid Formats Documentation","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"yGNrZNrt7U"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/user-guide/grid-formats.html","key":"N8RYxPN7Ui"}],"key":"Pax6FwQgBh"}],"key":"tYMCBewTXD"},{"type":"heading","depth":3,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kPparzjinP"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"bvAbm6ItDz"},{"type":"table","position":{"start":{"line":24,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"SAlL5ensSN"}],"key":"dbI9KlRS3o"},{"type":"tableCell","header":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"ClId9Ogo9H"}],"key":"tasOykklmB"},{"type":"tableCell","header":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"T8eqMxYa2D"}],"key":"oKpa6FFDjN"}],"key":"hacraDU6hX"},{"type":"tableRow","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"link","url":"https://cfconventions.org/","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"CF Conventions","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"ZOrlAeiliA"}],"urlSource":"https://cfconventions.org/","key":"dQ1VdXX6R1"}],"key":"sRLmxbxhFI"},{"type":"tableCell","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"zjYWISvHw4"}],"key":"LMFgS3eGLL"},{"type":"tableCell","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[],"key":"k9gvyL70zp"}],"key":"BrdSeIBpAJ"},{"type":"tableRow","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"link","url":"https://ugrid-conventions.github.io/ugrid-conventions/","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"UGRID Conventions","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"qg2N5fbijL"}],"urlSource":"https://ugrid-conventions.github.io/ugrid-conventions/","key":"cvsz4dfbYg"}],"key":"unvBdCfvKI"},{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"fVMH1739JV"}],"key":"hljzykm0oa"},{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[],"key":"Zr4iayurG6"}],"key":"PEh7tezcyA"},{"type":"tableRow","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"link","url":"https://numpy.org/","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Numpy","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"akX66xLWMP"}],"urlSource":"https://numpy.org/","key":"Av5V11kV4y"}],"key":"lqQmdKteat"},{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"ZCtvVJQUb4"}],"key":"EXu1XAelKe"},{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[],"key":"KlMWB6zjOb"}],"key":"QZtRKLMj34"},{"type":"tableRow","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"link","url":"https://docs.xarray.dev/en/stable/","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Xarray","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"eRyihEMXri"}],"urlSource":"https://docs.xarray.dev/en/stable/","key":"WGSHhOX2Sd"}],"key":"yPI4irK3lP"},{"type":"tableCell","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"mDMyUFJzGc"}],"key":"tQ3YwTgdE8"},{"type":"tableCell","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[],"key":"eM9jZlTnAJ"}],"key":"zrJZzSeiiD"}],"key":"mSWsS8YjrR"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"strong","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"X481dLfSnC"}],"key":"NgTd2PZvGG"},{"type":"text","value":": 15 minutes","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"zLzkjlc5Tb"}],"key":"t2hTtbFF7p"},{"type":"thematicBreak","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"fU6PFqBCc4"}],"key":"l32eudLrP0"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":50.816,"visible":true,"width":100}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Structured vs Unstructured Grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OpJyJ4yKUq"}],"identifier":"structured-vs-unstructured-grids","label":"Structured vs Unstructured Grids","html_id":"structured-vs-unstructured-grids","implicit":true,"key":"VcHJd1zuCy"}],"key":"xj7uKtqEUk"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":160.799,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Before diving into unstructured grids, it is helpful to understand the basic differences between structured and unstructured grids:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GjFxTqYzNp"}],"key":"CtLibgIip2"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A structured grid is composed of grid cells (faces) that are well-organized in a predictable, grid-like topology, where simple indexing can be used to identify neighboring cells,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HhNjpj7Mfz"}],"key":"lqTp3rhySx"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"An unstructured grid represents the globe as a tesselation of various polygons (e.g. triangles, hexagons, etc.) to represent complex geometries, allowing those elements to be joined in any manner, but requiring explicit information to identify neighboring elements such as cells and nodes (vertices).","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"vmqO6AqnBy"}],"key":"pOSGSoJxSP"}],"key":"mZlbCJ2bZD"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Note that the focus here is on the horizontally unstructured grids in the climate and weather context, which may or may not involve vertical levels, but the same concepts apply to three dimensional unstructured grids as well.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iHnip7OJ6L"}],"key":"Ux03y5nwLf"}],"key":"kSjSWaqsSI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examples of structured grids (on left) and unstructured grids (center and right) can be seen below:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W6j8vydPHL"}],"key":"NyIkzPJU5m"}],"key":"wFyC5OAI59"},{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/unstructured-grid-viz-cookbook/build/grids-9493a13abc8178e8b3900203b876a890.png","title":"Structured Lat-Lon Grid","alt":"Alt text","width":1200,"key":"f3OZsojO3z","urlSource":"../../_static/images/grids.png"}],"key":"fnDMdnrZJa"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":44.0799,"visible":true,"width":100}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Structured Grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VpGmqnZTLl"}],"identifier":"structured-grids","label":"Structured Grids","html_id":"structured-grids","implicit":true,"key":"bKHlTZ1c5g"}],"key":"j6CTEOVZy1"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":196.788,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A few advantages of structured grids are:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FrE2h02WnC"}],"key":"wOOzbXr0CG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Uniform Representation: Simplifies numerical methods and enhances result interpretation.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bGsBScAnIB"}],"key":"VIfqSyGnkh"}],"key":"NlURlrGNAn"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Efficient Numerics: Well-suited for finite-difference schemes, ensuring computational efficiency.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rvhw57vxld"}],"key":"Q0t1cF2sPC"}],"key":"tqzBNpSz8d"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Simplified Interpolation: Straightforward interpolation facilitates integration of observational data and model outputs.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Uvnbe8TYxj"}],"key":"QvIoMMpsz6"}],"key":"VzJuW0cBMN"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Boundary Handling: Ideal for regular boundaries, easing implementation of boundary conditions.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"vqASn2lEGu"}],"key":"Tg4Jw2yIvT"}],"key":"F3iBZ6wfH7"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Optimized Parallel Computing: Regular structure supports efficient parallel computing for scalability.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"U1qfFTbQxF"}],"key":"O1lieQMJKC"}],"key":"P49MDlwLou"}],"key":"Nl04dSMvJe"}],"key":"xo2IOSHse5"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":43.2118,"visible":true,"width":100}},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sample Xarray Code to Generate a Basic Structured Grid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"okPq3bT6GQ"}],"identifier":"sample-xarray-code-to-generate-a-basic-structured-grid","label":"Sample Xarray Code to Generate a Basic Structured Grid","html_id":"sample-xarray-code-to-generate-a-basic-structured-grid","implicit":true,"key":"e9lgH8Dcpv"}],"key":"hVz8gpnaOi"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":148.802,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The code below shows the creation of a structured grid example over 2D Earth geometry and plots random temperature data over it. There are several ways and tools to create a structured grid, but this code works as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D6CeF1ySNh"}],"key":"k3EmuJdO3y"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Given the number of points in longitude and latitude directions, the code uses Numpy’s meshgrid to generate a structured grid. The temperature data is then interpolated onto this grid, creating a smooth representation. Xarray is leveraged to organize the gridded data into a dataset, facilitating easy manipulation and visualization. The resulting plot showcases the data on this structured grid, providing a clearer understanding of temperature variations across defined longitude and latitude ranges. Plotting the structured grid and the temperature data is done using Matplotlib along with Cartopy, a cartographic plotting library.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RVK3I722nw"}],"key":"IJeQJk1FwP"}],"key":"DO6Nq3ddI5"},{"type":"block","kind":"notebook-code","data":{"panel-layout":{"height":700.99,"visible":true,"width":100}},"children":[{"type":"code","lang":"python","executable":true,"value":"import cartopy.crs as ccrs\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport xarray as xr\n\n# Define the global domain\nlat_range = [-90.0, 90.0]\nlon_range = [-180.0, 180.0]\n\n# Create a structured grid. Note the number of points in each dimension\n# There is not need to store the grid points in a separate array\n# Also note that the grid points are evenly spaced and not connectivity information is needed\n\nnum_lat_points = 20\nnum_lon_points = 30\n\nlats = np.linspace(lat_range[0], lat_range[1], num_lat_points)\nlons = np.linspace(lon_range[0], lon_range[1], num_lon_points)\n\nlons_grid, lats_grid = np.meshgrid(lons, lats)\n\n# Generate random temperature data for each grid point\ntemperature_data = np.random.uniform(\n    low=20, high=30, size=(num_lat_points, num_lon_points)\n)\n\n# Create xarray Dataset\nds = xr.Dataset()\nds[\"temperature\"] = ([\"lat\", \"lon\"], temperature_data)\nds[\"lon\"] = lons\nds[\"lat\"] = lats\n\n# Plot the structured grid using xarray\nfig, ax = plt.subplots(subplot_kw={\"projection\": ccrs.PlateCarree()})\nax.set_global()\n\n# Plot world map lines\nax.coastlines()\nax.gridlines(draw_labels=True, dms=True, x_inline=False, y_inline=False)\n\n# Plot the structured grid\ncs = ax.pcolormesh(\n    ds[\"lon\"], ds[\"lat\"], ds[\"temperature\"], cmap=\"coolwarm\", shading=\"auto\"\n)\n\n# Colorbar\ncbar = plt.colorbar(cs, ax=ax, label=\"Temperature (°C)\")\n\nax.set_title(\"Structured Grid Example\")\nplt.show()","key":"AHokNK09ag"},{"type":"output","id":"2K7ccHLAssHzpna113ccs","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/unstructured-grid-viz-cookbook-dev/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"96243ea3bced3f06b090385752cfb6fe","path":"/unstructured-grid-viz-cookbook/build/96243ea3bced3f06b090385752cfb6fe.png"}}}],"key":"FEIoWsezGD"}],"key":"TeUfon2h7n"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":44.0799,"visible":true,"width":100}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Unstructured Grids","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yQQv3kdrkK"}],"identifier":"unstructured-grids","label":"Unstructured Grids","html_id":"unstructured-grids","implicit":true,"key":"aOMg6yVeUF"}],"key":"vqFZmD17eM"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":51.1285,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Characteristic features of unstructured grids are:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZZaWDkTlL4"}],"key":"UzavqyEIna"}],"key":"e9LXhIqAjO"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":196.788,"visible":true,"width":100}},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Adaptability to complex geometries: Fits intricate shapes and boundaries","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Df5sj8Ypei"}],"key":"pFUBPRMsiz"}],"key":"mSIhBrGBdj"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Often runs faster than structured grids: Requires fewer elements to achieve similar accuracy","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uzpZd3aC3j"}],"key":"ZugTOtmmL0"}],"key":"zCGUPfyB2m"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Local refinement: Concentrates resolution on areas of interest","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"em3S3O95zI"}],"key":"bBVaMznFAV"}],"key":"t5MDPpULPt"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Flexibility in element types: Accommodates various element shapes","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"N8UDdYi3pL"}],"key":"V6Gcpmp2E7"}],"key":"scLZ5eH2GP"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Efficient parallelization: Scales well to multiple processors","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"DT4dPxMeOW"}],"key":"rHkMWcGsB5"}],"key":"SzcqwJT5Ln"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Suitability for dynamic simulations: Adapts to changing conditions","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"X436bpn8Hk"}],"key":"XNq2uPPAJa"}],"key":"rUd05PIYzf"}],"key":"bSSb1Vh8k3"}],"key":"h9gGLymROp"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":43.2118,"visible":true,"width":100}},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sample Xarray Code to Generate a Basic Unstructured Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"len9J0wyee"}],"identifier":"sample-xarray-code-to-generate-a-basic-unstructured-mesh","label":"Sample Xarray Code to Generate a Basic Unstructured Mesh","html_id":"sample-xarray-code-to-generate-a-basic-unstructured-mesh","implicit":true,"key":"BuPwlDbEe1"}],"key":"frqlHTJBpk"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":97.3958,"visible":true,"width":100}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The code below uses a very basic, standard Python approach to showcase a simple unstructured mesh topology (without a real meaning or value).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dDsrrndN1S"}],"key":"PARjxxG3o7"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This code generates an unstructured grid out of 600 arbitrarily created nodes (latitude, longitude pairs sampled from corresponding ranges via a uniform distribution). It performs Delaunay triangulation of those nodes using matplotlib.tri.Triangulation to create grid cells. The resulting triangulation is then plotted using cartopy and matplotlib.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NKjxuF30qu"}],"key":"xWmzA9BoKc"}],"key":"BdVYJVfLaP"},{"type":"block","kind":"notebook-code","data":{"panel-layout":{"height":700.99,"visible":true,"width":100}},"children":[{"type":"code","lang":"python","executable":true,"value":"import cartopy.crs as ccrs\nimport matplotlib.pyplot as plt\nimport matplotlib.tri as mtri\nimport numpy as np\nimport xarray as xr\n\n# Generate random temperature data\nnp.random.seed(42)\nnum_points = 600\nlatitudes = np.random.uniform(low=-90, high=90, size=num_points)\nlongitudes = np.random.uniform(low=-180, high=180, size=num_points)\ntemperatures = np.random.uniform(low=-30, high=30, size=num_points)\n\n# Create xarray DataArray for temperature data\ntemperature_data = xr.DataArray(\n    temperatures, dims=\"points\", coords={\"points\": range(num_points)}\n)\n\n# Perform Delaunay triangulation\ntriang = mtri.Triangulation(longitudes, latitudes)\n\n# Create xarray DataArray for triangulation coordinates\ntriang_data = xr.DataArray(\n    np.column_stack([triang.x, triang.y]), dims=(\"points\", \"coords\")\n)\n\n# Plot the globe with unstructured mesh using xarray\nfig, ax = plt.subplots(subplot_kw={\"projection\": ccrs.PlateCarree()})\nax.set_global()\n\n# Plot world map lines with prominent gridlines\nax.coastlines(linewidth=0.5)\n# ax.gridlines(draw_labels=True, dms=True, x_inline=False, y_inline=False, linewidth=0.5)\n\n# Plot unstructured mesh with bold lines\nax.triplot(\n    triang, \"ko-\", markersize=0.1, linewidth=0.5, alpha=0.5\n)  # Increase linewidth to see the triangles\n\n# Scatter plot with temperature data\nsc = ax.scatter(\n    longitudes,\n    latitudes,\n    c=temperature_data,\n    cmap=\"coolwarm\",\n    s=10,\n    transform=ccrs.PlateCarree(),\n)\n\n# Colorbar\ncbar = plt.colorbar(sc, ax=ax, label=\"Temperature (°C)\")\n\nax.set_title(\"Unstructured Mesh Example\")\nplt.show()","key":"a15mqZIKoX"},{"type":"output","id":"ZuCeZRLW9sy9OfP5JrS5X","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0e223bf2dd2bc54b13153e036c8ae1b1","path":"/unstructured-grid-viz-cookbook/build/0e223bf2dd2bc54b13153e036c8ae1b1.png"}}}],"key":"KAAJ78UQoC"}],"key":"eWD63litpM"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":85.3993,"visible":true,"width":100}},"children":[{"type":"div","class":"admonition alert alert-info","children":[{"type":"paragraph","children":[{"type":"text","value":"Note:","key":"VYshJzjE4V"}],"key":"BEgBvORQVV"},{"type":"text","value":"This is a very basic example to show how an unstructured grid with triangles would look like. In actual model outputs, often the region of interest is meshed with a finer resolution, while it is coarsened in areas where high resolution is not needed. This is done to reduce the number of elements and improve computational efficiency.","key":"FV40pW7UQn"}],"key":"ZxahQmEURL"}],"key":"pQZhyVkkeZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Unstructured Grids?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XZHumgNY60"}],"identifier":"why-unstructured-grids","label":"Why Unstructured Grids?","html_id":"why-unstructured-grids","implicit":true,"key":"b0d9hmbjY3"}],"key":"JwveLxRbgS"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Arrival of the next generation, kilometer-scale global models for weather and climate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ltlG4GlWWz"}],"identifier":"arrival-of-the-next-generation-kilometer-scale-global-models-for-weather-and-climate","label":"Arrival of the next generation, kilometer-scale global models for weather and climate","html_id":"arrival-of-the-next-generation-kilometer-scale-global-models-for-weather-and-climate","implicit":true,"key":"i0m6YJtqJq"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The aforementioned features and strengths of unstructured grids make them appealing for data analysis and visualization of kilometer-scale global weather and climate model outputs that produce very large spatio-temporal datasets.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"slkI1KrhoA"}],"key":"OrHZ20Ptva"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Therefore, after nearly two decades of development and evaluation, the climate and global weather modeling communities are transitioning from simple structured grids to this kind of more complex, but more scalable unstructured grids upon which governing equations of state are solved.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OlJxWN1jmZ"}],"key":"n4WciOLM3i"}],"key":"jgnS8H5ltn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Many Unstructured Grid Types, No Commonly Used Convention or Tools","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ph3LXpspbi"}],"identifier":"many-unstructured-grid-types-no-commonly-used-convention-or-tools","label":"Many Unstructured Grid Types, No Commonly Used Convention or Tools","html_id":"many-unstructured-grid-types-no-commonly-used-convention-or-tools","implicit":true,"key":"Sf8afQf5D2"}],"key":"INkpDpZhor"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"There are several climate and weather models that generate unstructured grids that vary from each other regarding not only the geometric elements (shape of grid faces, i.e. polygons, etc.) but also the file formats and extensions, and how special information such as geometric elements’ connectivity is represented. This creates a challenge towards having a widely used convention for the representation of unstructured grid data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Yqxh4oWgC5"}],"key":"vykWXBVyLH"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are only a few analysis tools that are capable of working directly with unstructured mesh data that come from so many mesh formats, and most of the time, the common practice is to resample to structured grids, but this has myriad pitfalls.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MX5p3fSdem"}],"key":"bfGSjXFpIB"}],"key":"SSRG1U0Qrt"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":305.451,"visible":true,"width":100}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why UXarray for Unstructured Grids?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iDQMeLspkS"}],"identifier":"why-uxarray-for-unstructured-grids","label":"Why UXarray for Unstructured Grids?","html_id":"why-uxarray-for-unstructured-grids","implicit":true,"key":"DMHqjJVi84"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UXarray, which stands for “Unstructured Grids - Xarray”, is a Python package that provides Xarray-styled analysis and visualization functionality for working ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yTzfvBblTE"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"directly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lHYJurMpYa"}],"key":"XJxDvdt6QG"},{"type":"text","value":" with unstructured grids that are resulting from most of the climate and weather models. Offering a unified representation of various model outputs around the UGRID conventions, UXarray enables working with native unstructured grids in a single, grid format-agnostic interface.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nLosFakDpy"}],"key":"hDUIz8PA4o"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"More on UXarray in the next chapter.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"heWtAlmiIu"}],"key":"OsxcP4WwIH"}],"key":"GEMgYQ0fQ1"},{"type":"block","kind":"notebook-content","data":{"panel-layout":{"height":84.3924,"visible":true,"width":100}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is next?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p1T4ML1Z3S"}],"identifier":"what-is-next","label":"What is next?","html_id":"what-is-next","implicit":true,"key":"CMc8qaWU3m"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The next section will provide an overview of the general-purpose plotting libraries available in the scientific Python ecosystem.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZtW2Ek0y2B"}],"key":"A8zrDcbY95"}],"key":"Dok9zYatvi"}],"key":"LCfQMFAR2t"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How to Cite This Cookbook","url":"/notebooks/how-to-cite","group":"Preamble"},"next":{"title":"Plotting Libraries","url":"/notebooks/foundations/plotting-libs","group":"Foundations"}}},"domain":"http://localhost:3000"}